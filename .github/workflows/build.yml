name: Solar system continuous integration

on:
  workflow_dispatch:
  push:
    branches:
     - main
     - 'feature/*'

env:
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'

jobs:
  unit-testing:
    name: Unit-testing
    strategy:
      matrix:
        nodejs_version: [18,22]
        operating_system: [ubuntu-latest,macos-latest]
        exclude:
         - nodejs_version: 18
           operating_system: macos-latest
      
    runs-on: ${{ matrix.operating_system }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js - ${{ matrix.nodejs_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodejs_version }}

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          
      - name: Install dependencies
        run: npm install

      - name: Unit testing
        id: nodejs-unit-testing
        run: npm test

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Mocha-test-result-${{ matrix.nodejs_version }}-${{ matrix.operating_system }}
          path: test-results.xml


  code-coverage:
    name: Code coverage
    strategy:
      matrix:
        nodejs_version: [18]
        operating_system: [ubuntu-latest]
        exclude:
         - nodejs_version: 18
           operating_system: macos-latest
      
    runs-on: ${{ matrix.operating_system }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Use Node.js - ${{ matrix.nodejs_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodejs_version }}

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          
      - name: Install dependencies
        run: npm install

      - name: Code coverage
        continue-on-error: true
        run: npm run coverage

      - uses: actions/upload-artifact@v4
        with:
          name: Code-coverage-result-${{ matrix.nodejs_version }}-${{ matrix.operating_system }}
          path: coverage
          retention-days: 5


  docker:
    needs: [unit-testing,code-coverage]
    name: Containerazation
    runs-on: ubuntu-latest
    steps:
     - name: Check in to repository
       uses: actions/checkout@v4
       
     - name: Login to Docker Hub
       uses: docker/login-action@v3
       with:
         username: ${{ vars.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
         
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v3
       
     - name: Build and push
       uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/solar-sytem:latest
